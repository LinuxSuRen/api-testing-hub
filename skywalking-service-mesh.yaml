#!api-testing
# yaml-language-server: $schema=https://linuxsuren.github.io/api-testing/api-testing-schema.json
api: 172.11.0.6:30689
items:
- expect:
    statusCode: 200
  name: collectHTTP
  request:
    api: /skywalking.v3.ServiceMeshMetricService/collect
    body: |-
      {
          "httpMetrics": {
              "metrics": [
                  {
                      "sourceServiceName": "atest",
                      "destServiceInstance": "destInstance",
                      "endpoint": "endpoint",
                      "responseCode": 200,
                      "sourceServiceInstance": "{{randAlpha 6}}",
                     "destServiceName": "{{randEnum "a" "b" "c" "d"}}",
                     "startTime": {{now.UnixMilli}},
                     "endTime": {{now.UnixMilli}},
                      "latency": {{randInt 0 10}},
                      "protocol": "{{randEnum "gRPC" "HTTP"}}"
                  }
              ]
          }
      }
    method: GET
- expect:
    statusCode: 200
  name: collectTcp
  request:
    api: /skywalking.v3.ServiceMeshMetricService/collect
    body: |-
      {
          "tcpMetrics": {
              "metrics": [
                  {
                      "sourceServiceName": "atest",
                      "destServiceInstance": "destInstance",
                      "sourceServiceInstance": "{{randAlpha 6}}",
                     "destServiceName": "{{randEnum "a" "b" "c" "d"}}",
                     "startTime": {{now.UnixMilli}},
                     "endTime": {{now.UnixMilli}},
                      "receivedBytes": {{randInt 0 1000}},
                      "sentBytes": {{randInt 0 1000}}
                  }
              ]
          }
      }
    method: GET
name: skywalking-service-mesh
spec:
  kind: gRPC
  rpc:
    import:
    - skywalking-data-collect-protocol-9.6.0
    protofile: https://github.com/apache/skywalking-data-collect-protocol/archive/refs/tags/v9.6.0.zip?file=service-mesh-probe/service-mesh.proto
